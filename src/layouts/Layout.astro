---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
      /* Asegúrate de que global.css se aplique. Astro lo maneja automáticamente si está en src/styles */
      @import '../styles/global.css';
    </style>
  </head>
  <body class="font-poppins bg-white text-gray-800">
    <slot />
    <script>
      // Script para manejar el menú móvil
      document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.getElementById('menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (menuButton && mobileMenu) {
          menuButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
            menuButton.setAttribute('aria-expanded', String(!isExpanded));
            mobileMenu.setAttribute('aria-hidden', String(isExpanded));
          });
        }
        
        // Script para el desplazamiento suave y cerrar menú móvil
        document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
          anchor.addEventListener('click', (e) => {
            const targetId = anchor.getAttribute('href');
            if (targetId && targetId.startsWith('#') && targetId.length > 1) {
              e.preventDefault();
              const targetElement = document.querySelector(targetId);
              if (targetElement) {
                targetElement.scrollIntoView({
                  behavior: 'smooth'
                });
                // Cerrar el menú móvil si está abierto
                if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
                  mobileMenu.classList.add('hidden');
                  if(menuButton) menuButton.setAttribute('aria-expanded', 'false');
                  mobileMenu.setAttribute('aria-hidden', 'true');
                }
              }
            }
          });
        });
      });
    </script>
  </body>
</html>
